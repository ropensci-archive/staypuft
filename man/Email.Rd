% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field-classes.R
\name{Email}
\alias{Email}
\title{Email}
\description{
A validated email field. Validation occurs during both
serialization and deserialization
}
\examples{
z <- Schema$new("email", email = fields$email())
z
z$load(list(email = "blueberries@yahoo.com")) # good
if (interactive()) z$load(list(email = 'foobar')) # bad
}
\keyword{internal}
\section{Super classes}{
\code{\link[staypuft:FieldABC]{staypuft::FieldABC}} -> \code{\link[staypuft:Field]{staypuft::Field}} -> \code{Email}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Email$new()}}
\item \href{#method-validate_email}{\code{Email$validate_email()}}
\item \href{#method-clone}{\code{Email$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="bind_to_schema">}\href{../../staypuft/html/Field.html#method-bind_to_schema}{\code{staypuft::Field$bind_to_schema()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="context">}\href{../../staypuft/html/Field.html#method-context}{\code{staypuft::Field$context()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="deserialize">}\href{../../staypuft/html/Field.html#method-deserialize}{\code{staypuft::Field$deserialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="deserialize_">}\href{../../staypuft/html/Field.html#method-deserialize_}{\code{staypuft::Field$deserialize_()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="fail">}\href{../../staypuft/html/Field.html#method-fail}{\code{staypuft::Field$fail()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="get_value">}\href{../../staypuft/html/Field.html#method-get_value}{\code{staypuft::Field$get_value()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="print">}\href{../../staypuft/html/Field.html#method-print}{\code{staypuft::Field$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="root">}\href{../../staypuft/html/Field.html#method-root}{\code{staypuft::Field$root()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="serialize">}\href{../../staypuft/html/Field.html#method-serialize}{\code{staypuft::Field$serialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="serialize_">}\href{../../staypuft/html/Field.html#method-serialize_}{\code{staypuft::Field$serialize_()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="validate_">}\href{../../staypuft/html/Field.html#method-validate_}{\code{staypuft::Field$validate_()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="staypuft" data-topic="Field" data-id="validate_missing_">}\href{../../staypuft/html/Field.html#method-validate_missing_}{\code{staypuft::Field$validate_missing_()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new Email object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Email$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate_email"></a>}}
\if{latex}{\out{\hypertarget{method-validate_email}{}}}
\subsection{Method \code{validate_email()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Email$validate_email()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Email$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
